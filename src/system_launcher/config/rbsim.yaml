/rbsim/sim:
  ros__parameters:
    freqsim: 100.0  # refresh rate of sim loop
    h: 0.01         # time step
    g_p: [0.0, 0.0, 1.5]  # starting position of drone
    l: 0.3535          # length of drone
    w: 0.3535          # width of drone
    he: 0.306          # height of drone
    In: [0.023142, 0.0, 0.0,
        0.0, 0.064328, 0.0,
        0.0, 0.0, 0.056522]  # inertia matrix
    mass: 1.693       # mass of drone
    con_rad: 0.3    # radius of drone
    prop_dia: 0.254   # diameter of propellelf.ext_cmd_publisher_.publish(Point(x=self.ext_setpoier
    kprop: 0.0000012843          # prop k value will need to divide by 1.2*prop_dia^4
    bprop: 0.0000000180137       # prop b value will need to divide by 1.2*prop_dia^5
    xypdis: 0.177     # xy position of propellers
    zpdis: 0.0933      # z position of propellers
    Tscale: 1       # scale of thrust
    PIDlims: [220.0, 220.0, 200.0, 
              0.3, 0.3, 0.3, 
              12.0, 3.0, 1.5, 
              6.27, 52.27, 45.0, 
              15.68]  # PID limits, first 3 will need to be converted from deg to rads
                # limits for the Controller
                # 0.0->1800, 0.0->1800, 0.0->1800, 0.0->1, 0.0->1, 0.0->1, 0->20, 0.5->8, 0.5->4, 0.05->0.5, 0->1, 20->89, 0.0->0.5
                # att_limsx,y,z, rate_limsx,y,z, lim_vel_horz, lim_vel_up, lim_vel_down, lim_thr_min, lim_thr_max, lim_tilt, lim_thr_xy_margin
                # tot thr = 52.26768, 52.27 = lim_thr_max, 6.27 = lim_thr_min, 15.68 = lim_thr_xy_margin
    kp: [1.13, 1.18, 1.0]  # proportional gains
    kvp: [2.79, 3.51, 5.74]  # proportional velocity gains [2.79, 3.51, 7.74]
    kvi: [0.19, 0.49, 0.65]  # integral velocity gains [0.19, 0.49, -2.85]
    kvd: [0.042, 0.14, 0.11]  # derivative velocity gains
    kap: [6.72, 5.2, 2.92]  # proportional acceleration gains
    krp: [0.294, 0.386, 0.342]  # proportional rate gains
    kri: [0.286, 0.337, 0.31]  # integral rate gains
    krd: [-0.009, -0.027, -0.022]  # derivative rate gains
    krff: [-0.0007, -0.009, -0.024]  # feedforward rate gains
    vel_con_lims: [1.0, 1.0]  # velocity limits
    n: [-1.0, 0.0, 0.0,
        1.0, 0.0, 0.0,
        0.0, -1.0, 0.0,
        0.0, 1.0, 0.0,
        0.0, 0.0, -1.0,
        0.0, 0.0, 1.0]  # normal vectors
    nhat: [-1.0, 0.0, 0.0,
        1.0, 0.0, 0.0,
        0.0, -1.0, 0.0,
        0.0, 1.0, 0.0,
        0.0, 0.0, -1.0,
        0.0, 0.0, 1.0]  # normal unit vectors
    poswall: 1.5 # position of wall
    negwall: -1.5 # position of wall
    d: [-1.0, 1.0, -1.0, 1.0, -2.0, 0.0]  # distance from origin for each wall; i1*poswall, i2*negwall, i3*poswall, i4*negwall, i5*poswall
    stiff: 100.0      # stiffness
    damp: 10.0       # damping
   